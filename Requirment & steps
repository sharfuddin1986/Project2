# Project-2

1- Create Four  Ec2 instance with ubuntu 20.04
   One for Jenkins/Ansible/Terraform t2 Medium type instance.  
   One instance t2 medium for Kubernetes Master .
   Two  Ec2 instance t2 micro type for Replicas.
   Create One IAM user with Administrator full acess & Ec2 full acess and generate acess key or secret key
2- Machine-1 need to install terraform.
   https://developer.hashicorp.com/terraform/downloads

 $  wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
 $  sudo apt update && sudo apt install terraform
 $  sudo nano main.tf     ### File is attached in repo
 $  terrafornm init
 $  terraform plan
 $  terraform apply

   After K8-Master and slave is created

3- Machine-1 need to install Ansible.
   
 $ sudo apt update
 $ sudo apt install software-properties-common
 $ sudo add-apt-repository --yes --update ppa:ansible/ansible
 $ sudo apt install ansible 
 $ cd .ssh/              ### copy the id_rsa.pub file contain and paste to the all machine under authorized_keys
 $ sudo nanno /etc/ansible/hosts
   [master]
   private ip of k8-master
   [slaves]
   private ip of k8-slave1
   private ip of k8-slave2
 $ ansible -m ping all    ### Now i can ping all
 $ sudo nano script1.sh   ###  This script for jenkins installation in machine1 
 $ sudo nano script2.sh   ###  This script for K8-master installation for machine3 
 $ sudo nano script3.sh   ###  This script for K8-slave installation for machine2 & 4
 $ sudo nano play.yml     ### File is attached in this repo
 $ ansible-playbook play.yml --syntax-check
 $ ansible-playbook play.yml --check
 $ ansible-playbook play.yml


4- Machine-3 need to Configure kubernetes cluster

 $ sudo kubeadm init       ### Its give the token to join worker node (machine 2 & 4)
 $ mkdir -p $HOME/ .kube
 $ sudo cp -i /etc/kubernetes/admin.conf $HOME/ .kube/config
 $ sudo chown $(id -u):$(id -g) $HOME/ .kube/config
 $ kubectl apply -f https://github.com/weavewrks/weave/releases/dowload/v2.8.1/weave-dameonset-k8s.yml
 $ kubectl get no      ###   Ready state now 

   Go to the worker node machine 2 and 4 paste the token with sudo after joined the cluster

 $ kubectl get no     ### woker node is showing here 


5- Machine-1 

   setup the jenkins dashboad 
   Add node->k8-master->remote root directory-/home/ubuntu/jenkins->launch via sssh-paste the private ip 
   of machine3(kubernetes-cluster)->credential-add jenkins-usrname & password -ubuntu-paste the key->
   non verrifing startegy->save

   Manage jenkins->credential->under stores scoped to jenkins click global icon->add credential->
   kind username & password -> username-docker hub accoount user name  and password -> create 

6- Go to Github account and creat one repo
   create dockerfile
   FROM ubuntu/apache2
   COPY . /var/www//html/
   
7- Go to jenkins dashboard create job
   testpipeline-pipeline-script -hello world  1.40-> after run the job then output cansole genereate the password dockerhub
   define the task under script in testpipeline   #### Script file is attached in repo
   
   a-test task-hello
   b-clone git hub repo and create folder name testpipe under this folder /home/ubuntu/jenkins
   c-build and push image to docker hub account
   d-crate deployment for service k8slave

   After Run this job create image and push to dockerhub account automatically.

8-  One more step add in script for deployoyment service.yml and deployment.yml
    Run the job  after that can see web page is open through machine2 and machine4 with port 30008

    Enable gitwebhook for any upadate in git repo automatically build job and deploy
    if again run this job it will give error file is exist alreay need to add one line in sript only.
   
    sh 'kubectl delete deploy nginx-deployment'

    
  


